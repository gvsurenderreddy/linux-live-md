#!/bin/bash
# Linux Live Kit version 7

export PATH=.:./tools:../tools:/usr/sbin:/usr/bin:/sbin:/bin:/

CHANGEDIR=$(dirname $(readlink -f $0))
echo "Changing current directory to $CHANGEDIR"
CWD="$(pwd)"
cd $CHANGEDIR

. ./.config || exit 1
. ./livekitlib || exit 1

# only root can continue, because only root can read all files from your system
allow_only_root

# check for mksquashfs with xz compression
#if [ "$(mksquashfs 2>&1 | grep "Xdict-size")" = "" ]; then
#   echo "mksquashfs not found or doesn't support -comp xz, aborting, no changes made"
#   exit 1
#fi

# build initramfs image
echo "Building intramfs image..."
cd initramfs
INITRAMFS=$(./initramfs_create "$LIVEKITNAME")
cd ..

# create live kit filesystem (cpio archive)
rm -Rf "$LIVEKITDATA"
BOOT="$LIVEKITDATA"/"$LIVEKITNAME"/boot
mkdir -p "$BOOT"
#mkdir -p "$BOOT"/../changes
#mkdir -p "$BOOT"/../modules
mv "$INITRAMFS" $BOOT/initrfs.img
cp bootfiles/* $BOOT
cat bootfiles/syslinux.cfg | sed -r "s:/boot/:/$LIVEKITNAME/boot/:" > $BOOT/syslinux.cfg
cat bootfiles/bootinst.bat | sed -r "s:/boot/:/$LIVEKITNAME/boot/:" | sed -r "s:\\\\boot\\\\:\\\\$LIVEKITNAME\\\\boot\\\\:" > $BOOT/bootinst.bat
cp /boot/$VMLINUZ-$KERNEL $BOOT/$VMLINUZ


# create rootfs filesystem && squashfs file
SQUASHFS_DIR=$LIVEKITDATA/$LIVEKITNAME/squashfs_dir
ROOTFS_FILE=$SQUASHFS_DIR/rootfs
ROOTFS_MOUNTPOINT=$LIVEKITDATA/$LIVEKITNAME/tmp
mkdir -p $SQUASHFS_DIR
dd if=/dev/zero of=$ROOTFS_FILE bs=1G seek=100 count=0
mke2fs -F $ROOTFS_FILE

mkdir $ROOTFS_MOUNTPOINT
mount $ROOTFS_FILE $ROOTFS_MOUNTPOINT -o loop
for i in $MKMOD; do
	cp -r /$i $ROOTFS_MOUNTPOINT
done
umount $ROOTFS_MOUNTPOINT
rmdir $ROOTFS_MOUNTPOINT

mksquashfs $SQUASHFS_DIR $LIVEKITDATA/$LIVEKITNAME/squashRootfs
rm -rf $SQUASHFS_DIR

